/*
? –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Blogger –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ –±–ª–æ–≥–µ—Ä–∞ –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏:
? email - email
? age - –≤—ñ–∫, —á–∏—Å–ª–æ
? numberOfPosts - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —á–∏—Å–ª–æ
? topics - –º–∞—Å–∏–≤ —Ç–µ–º –Ω–∞ —è–∫–∏—Ö —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –±–ª–æ–≥–µ—Ä
? –ö–ª–∞—Å —á–µ–∫–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä - –æ–±'—î–∫—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑ –æ–¥–Ω–æ–π–º–µ–Ω–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏.
? –î–æ–±–∞–≤ –º–µ—Ç–æ–¥ getInfo(),—è–∫–∏–π, –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫: Blogger ${email} is ${–≤—ñ–∫} years old and has ${–∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤} posts.
? –î–æ–¥–∞–π –º–µ—Ç–æ–¥ updatePostCount(value), —è–∫–∏–π —É –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ value –ø—Ä–∏–π–º–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ.
*/

// class Blogger {
//   #numberOfPosts;
//   constructor({ email, age, numberOfPosts, topics }) {
//     this.email = email;
//     this.age = age;
//     this.#numberOfPosts = numberOfPosts;
//     this.topics = topics;
//   }
//   getInfo() {
//     return `Blogger ${this.email} is ${this.age} years old and has ${
//       this.#numberOfPosts
//     } posts.`;
//   }

//   #checkValue(value) {
//     // if (Number(value)) {
//     //   return Number(value);
//     // }
//     // return 0;
//     // return Number(value) ? Number(value) : 0;

//     const isNumber = Number(value);
//     return isNumber ? isNumber : 0;
//   }

//   updatePostCount(value) {
//     this.#numberOfPosts += this.#checkValue(value);
//   }
// }

// const r2d2 = new Blogger({
//   email: 'r2d2@gmail.com',
//   age: 21,
//   numberOfPosts: 50,
//   topics: ['wors', 'stars', 'lazer', 'dark size', 'stars ship'],
// });
// r2d2.updatePostCount('40');
// console.log(r2d2.getInfo());

// const c3po = new Blogger({
//   email: 'c3po@gmail.com',
//   age: 22,
//   numberOfPosts: 550,
//   topics: [
//     'wors',
//     'stars',
//     'lazer',
//     'dark size',
//     'stars ship',
//     'languages',
//     'glayder',
//   ],
// });
// c3po.updatePostCount(50);
// console.log(c3po.getInfo());

/*
? –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Storage, —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å–∫–ª–∞–¥–æ–º —Ç–æ–≤–∞—Ä—ñ–≤.
? –ü—Ä–∏ –≤–∏–∫–ª–∏–∫—É –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏–º–µ –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç - –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –º–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤, —ñ –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏–º–µ –π–æ–≥–æ —É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å items.
? –î–æ–¥–∞–π –º–µ—Ç–æ–¥–∏ –∫–ª–∞—Å—É:
? getItems() ‚Äì –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤.
? addItem(item) - –æ—Ç—Ä–∏–º—É—î –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä —Ç–∞ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ –ø–æ—Ç–æ—á–Ω–∏—Ö.
? removeItem(item) - –æ—Ç—Ä–∏–º—É—î —Ç–æ–≤–∞—Ä —ñ, —è–∫—â–æ –≤—ñ–Ω —î, –≤–∏–¥–∞–ª—è—î –π–æ–≥–æ –∑ –ø–æ—Ç–æ—á–Ω–∏—Ö.
*/

class Storage {
  constructor(items = []) {
    this.items = items;
  }

  getItems() {
    return this.items;
  }

  #checkItem(item) {
    return this.items.includes(item);
  }

  addItem(item) {
    const inItems = this.#checkItem(item);

    if (!inItems) {
      this.items.unshift(item);
    }
  }
  removeItem(newItem) {
    this.items = this.items.filter((item) => item !== newItem);
  }
}

// const stor1 = new Storage(['üçé', 'üçã', 'üçá', 'üçë']);
// stor1.addItem('üçå');
// stor1.removeItem('üçã');
// console.log(stor1.getItems());

// const storage = new Storage(['üçé', 'üçã', 'üçá', 'üçë']);

// const items = storage.getItems();
// console.table(items); // [ 'üçé', 'üçã', 'üçá', 'üçë' ]

// storage.addItem('üçå');
// console.table(storage.items); // [ 'üçé', 'üçã', 'üçá', 'üçë', 'üçå' ]

// storage.removeItem('üçã');
// console.table(storage.items); // [ 'üçé', 'üçá', 'üçë', 'üçå' ]

/*
? –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å User —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ login —Ç–∞ email.
? –û–≥–æ–ª–æ—Å–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ #login —Ç–∞ #email, –¥–æ—Å—Ç—É–ø –¥–æ —è–∫–∏—Ö –∑—Ä–æ–±–∏ —á–µ—Ä–µ–∑ –≥–µ—Ç—Ç–µ—Ä —Ç–∞ —Å–µ—Ç—Ç–µ—Ä login —Ç–∞ email.
*/

// class User {
//   #login;
//   #email;
//   constructor({ login, email }) {
//     this.#login = login;
//     this.#email = email;
//   }

//   get email() {
//     return this.#email;
//   }
//   set email(newEmail) {
//     this.#email = newEmail;
//   }

//   get login() {
//     return this.#login;
//   }

//   set login(newLogin) {
//     this.#login = newLogin;
//   }
// }

// const mango = new User({
//   login: 'Mango',
//   email: 'mango@dog.woof',
// });
// mango.email = 'mango@gmail.com';
// console.log(mango.email);
// mango.login = 'New Mango login';
// console.log(mango.login);

// const mango = new User({
//   login: 'Mango',
//   email: 'mango@dog.woof',
// });

// console.log(mango.login); // Mango
// mango.login = 'Mangodoge';
// console.log(mango.login); // Mangodoge

// const poly = new User({
//   login: 'Poly',
//   email: 'poly@mail.com',
// });

// console.log(poly.email); // poly@mail.com
// poly.email = 'poly@mopva.fj';
// console.log(poly.email); // poly@mopva.fj

/*
? –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Notes, —è–∫–∏–π —É–ø—Ä–∞–≤–ª—è—î –∫–æ–ª–µ–∫—Ü—ñ—î—é –Ω–æ—Ç–∞—Ç–æ–∫ —É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ items.
? –ù–æ—Ç–∞—Ç–∫–∞ —Ü–µ –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ text —Ç–∞ priority.
? –î–æ–¥–∞–π –∫–ª–∞—Å—É —Å—Ç–∞—Ç–∏—á–Ω—É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å Priority, –≤ —è–∫—ñ–π –∑–±–µ—Ä—ñ–≥–∞—Ç–∏–º–µ—Ç—å—Å—è –æ–±'—î–∫—Ç —ñ–∑ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–∞–º–∏.
?
? {
?   LOW: 'low',
?   NORMAL: 'normal',
?   HIGH: 'high'
? }
?
? –î–æ–¥–∞–π –º–µ—Ç–æ–¥–∏ addNote(note), removeNote(text) —Ç–∞ updatePriority(text, newPriority).
*/

// class Notes {
//   static PRIORITY = { LOW: 'low', NORMAL: 'normal', HIGH: 'high' };
//   constructor(items = []) {
//     this.items = items;
//   }

//   getNotes() {
//     return this.items;
//   }

//   addNotes(note) {
//     this.items.push(note);
//   }

//   removeNotes(textToRemove) {
//     this.items = this.items.filter(({ text }) => text !== textToRemove);
//   }
//   updatePriority(textToUpdade, newPriority) {
//     const itemToUpdate = this.items.find(({ text }) => text === textToUpdade);
//     itemToUpdate.priority = newPriority;
//   }
// }

// const myNotes = new Notes([]);
// myNotes.addNotes({ text: 'My first notes', priority: Notes.PRIORITY.NORMAL });
// myNotes.addNotes({ text: 'My second notes', priority: Notes.PRIORITY.NORMAL });

// myNotes.removeNotes('My first notes');
// myNotes.updatePriority('My second notes', Notes.PRIORITY.HIGH);
// console.log(myNotes.getNotes());

/*
? –ù–∞–ø–∏—à—ñ—Ç—å –∫–ª–∞—Å Toggle, —è–∫–∏–π –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å {isOpen: boolean}
? —Ç–∞ –æ–≥–æ–ª–æ—à—É—î –æ–¥–Ω—É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å on/off –≤–∫–ª/–≤–∏–∫–ª (true/false).
? –ó–∞ –∑–∞–º–æ–≤—á–∞–Ω–Ω—è–º –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ on –º–∞—î –±—É—Ç–∏ false.
*/

class Toggle {
  constructor({ isOpen = false } = {}) {
    this.on = isOpen;
  }

  toggle() {
    this.on = !this.on;
  }
}

const firstToggle = new Toggle();
firstToggle.toggle(); //true
firstToggle.toggle(); //false
firstToggle.toggle(); //true
firstToggle.toggle(); //false
firstToggle.toggle(); //true
console.log(firstToggle.on);
